// sass --watch style.scss style.css
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap');

$themes: (
  light: (
    bg: hsl(236, 33%, 92%),
    primary: hsl(0, 0%, 98%),
    lightGray: hsl(233, 11%, 84%),
    darkGray: hsl(236, 9%, 61%),
    accent: hsl(235, 19%, 35%)
  ),
  dark: (
    bg: hsl(235, 21%, 11%),
    primary: hsl(235, 24%, 19%),
    txtColor: hsl(234, 39%, 85%),
    txtColorHover: hsl(236, 33%, 92%),
    lightGray: hsl(234, 11%, 52%),
    darkGray: hsl(233, 14%, 35%),
    darkGrayHover: hsl(237, 14%, 26%)
  )
);
$brightBlue: hsl(220, 98%, 61%);
$checkBackground: linear-gradient(hsl(192, 100%, 67%), hsl(280, 87%, 65%));
$lineHeight: 60px;

@mixin flex($col: '') {
  @if ($col) {
    flex-direction: $col;
  }
  display: flex;
  justify-content: center;
  align-items: center;
}
@function getValue($key1, $key2, $key3) {
  @return map-get(map-get($key1, $key2), $key3);
}

* {
  margin: 0;
  padding: 0;

  &::before,
  &::after {
    box-sizing: inherit;
  }
}

html {
  box-sizing: border-box;
}

body {
  font-family: 'Josefin Sans', sans-serif;
  font-size: 18px;
  @include flex(column);
  background-color: getValue($themes, light, bg);
  background-image: url('./images/bg-desktop-light.jpg');
  background-size: 100% 300px;
  background-repeat: no-repeat;
  &.dark {
    background-color: getValue($themes, dark, bg);
    background-image: url('./images/bg-desktop-dark.jpg');
  }
}
a {
  text-decoration: none;
  color: inherit;
}
ul {
  list-style: none;
}
input[type="radio"] {
  left: -999em;
  position: absolute;
}

.container {
  margin: auto;
  width: 600px;
  height: 800px;
  @include flex(column);
  justify-content: start;
  color: getValue($themes, light, darkGray);
  position: relative;
  header {
    position: relative;
    width: 100%;
    h1 {
      font-weight: 700;
      text-transform: uppercase;
      letter-spacing: 20px;
      margin: 80px 0 70px 0;
      text-align: start;
      color: getValue($themes, light, bg);
    }
    #theme {
      position: absolute;
      right: 0;
      top: 80px;
      width: 25px;
      height: 25px;
      cursor: pointer;
    }
  }
  .addContainer {
    width: 100%;
    height: $lineHeight;
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    background-color: getValue($themes, light, primary);
    border-radius: 10px;
    font-weight: 400;
    color: getValue($themes, light, accent);
    cursor: pointer;
    .checked {
      margin-left: 20px;
      cursor:default;
      &:hover {
        background: none;
      }
    }
    input {
      width: 85%;
      font-size: 20px;
      background-color: inherit;
      border: none;
      outline: none;
      color: getValue($themes, light, accent);
      &:focus {
        border-bottom: 1px solid getValue($themes, light, darkGray);
      }
    }
  }
  .listContainer {
    width: 100%;
    height: 400px;
    overflow: auto;
    color: getValue($themes, light, accent);
    background-color: getValue($themes, light, primary);
    border-radius: 10px 10px 0 0;
    font-weight: 400;
    margin-bottom: 30px;
    position: relative;
    box-shadow: rgba(100, 100, 111, 0.3) 0px 7px 29px 0px;
    .listItem {
      padding: 0 20px;
      min-height: $lineHeight;
      height: auto;
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-bottom: 1px solid getValue($themes, light, lightGray);
      position: relative;
      cursor: pointer;
      .leftList {
        width: 95%;
        display: flex;
        align-items: center;
      }
      .complete + p {
        color: getValue($themes, light, darkGray);
        text-decoration: line-through;
      }
      p {
        width: 95%;
        overflow-wrap: break-word;
        padding: 10px 0;
      }
      button {
        border: none;
        background-color: transparent;
        font-size: 20px;
        color: getValue($themes, light, darkGray);
        display: none;
        &:hover {
          cursor: pointer;
          color: getValue($themes, light, accent);
        }
      }
      &:hover button {
        display: block;
      }
    }
  }
  footer {
    padding: 0 20px;
    width: 93.5%;
    height: $lineHeight;
    position: absolute;
    left: 0;
    bottom: 75px;
    border-radius: 0 0 10px 10px;
    background-color: getValue($themes, light, primary);
    border-top: 1px solid getValue($themes, light, darkGray);
    @include flex();
    color: getValue($themes, light, darkGray);
    .leftFoot {
      position: absolute;
      left: 20px;
    }
    .rightFoot {
      position: absolute;
      right: 20px;
      &:hover {
        cursor: pointer;
        color: getValue($themes, light, accent);
      }
    }
  }
  .midFoot {
    position: absolute;
    bottom: 95px;
    z-index: 1000;
    label {
      margin: 0 5px;
      font-weight: 700;
      cursor: pointer;
      color: getValue($themes, light, lightGray);
      &:hover {
        color: getValue($themes, light, accent);
      }
    }
    input[type="radio"]:checked+label{
      color: $brightBlue;
    }
  }
  .checked{
    width: 18px;
    height: 18px;
    border-radius: 50%;
    border: 1px solid getValue($themes, light, lightGray);
    margin-right: 10px;
    background: transparent;
    @include flex();
    position: relative;
    img {
      display: none;
    }
    &:hover {
      background: $checkBackground;
      .innerCheck {
        position: absolute;
        top: 1px;
        left: 1px;
        border-radius: 50%;
        width: 16px;
        height: 16px;
        background-color: getValue($themes, light, primary);
      }
    }
    &.complete {
      background: $checkBackground;
      img {
        display: block;
      }
      .innerCheck {
        display: none;
      }
    }
  }
}

.dark .container {
  color: getValue($themes, dark, lightGray);
  .addContainer {
    background-color: getValue($themes, dark, primary);
    .checked:hover {
      border-color: inherit;
    }
    input {
     color: getValue($themes, dark, txtColorHover);
    }
  }
  .listContainer {
    background-color: getValue($themes, dark, primary);
    // color: getValue($themes, dark, txtColor);
    .listItem {
      color: getValue($themes, dark, txtColorHover);
      border-color: getValue($themes, dark, darkGray);
      .delBtn:hover {
        color: getValue($themes, dark, txtColorHover);
      }
    }
  }
  .checked {
    border-color: getValue($themes, dark, darkGray);
    &:hover {
      border-color: getValue($themes, dark, lightGray);
    }
    &:hover .innerCheck {
      background-color: getValue($themes, dark, primary);
    }
  }
  footer {
    background-color: getValue($themes, dark, primary);
    color: getValue($themes, dark, lightGray);
    .leftFoot {
      &:hover {
        color: getValue($themes, dark, txtColorHover);
      }
    }
    .rightFoot {
      &:hover {
        color: getValue($themes, dark, txtColorHover);
      }
    }
  }
  .midFoot label {
    &:hover {
      color: getValue($themes, dark, txtColorHover);
    }
  }
}
.noti {
  position: relative;
  bottom: -70px;
}
.attribution {
  margin-top: 20px;
  color: getValue($themes, light, darkGray);
  a {
    background-color: aliceblue;
  }
}
.dark .attribution {
  color: getValue($themes, dark, lightGray);
  a {
    color: getValue($themes, dark, txtColor);
    background-color: blueviolet;
  }
}

@media (max-width: 375px) {
  body {
    font-size: 15px;
    height: 100vh;
    background-size: 100% 30%;
  }
  .container {
    margin: 0 auto;
    width: 335px;
    height: 600px;
    header {
      h1 {
        margin: 20px 0 30px 0;
      }
      #theme {
        top: 20px;
      }
    }
    .addContainer {
      height: 30px;
      padding: 10px 0;
      input {
        width: 80%;
        font-size: 15px;
      }
    } 
    .listContainer {
      height: 300px;
      .listItem {
        padding: 10px 20px;
        min-height: 30px;
        p {
          width: 85%;
        }
      }
    }
    footer {
      width: 88%;
      bottom: 100px;
      height: 50px;
    }     
    .midFoot {
      width: 100%;
      height: 50px;
      border-radius: 10px;
      @include flex();
      bottom: 25px;
      background-color: getValue($themes, light, primary);
      label {
        margin: 0 10px;
      }
    }
    .noti {
      position: relative;
      bottom: -120px;
    }
  }
  .dark .container {
    footer {
      background-color: getValue($themes, dark, primary);
    }
    .midFoot {
      background-color: getValue($themes, dark, primary);
      box-shadow: rgba(100, 100, 111, 0.3) 0px 7px 29px 0px;
    }
  }
  .attribution {
    display: none;
  }
}